{"ast":null,"code":"import _slicedToArray from\"C:/Users/markl/Desktop/Dojo_Assignments/Exams/Mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{Link,navigate}from'@reach/router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreatePet=function CreatePet(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),type=_useState4[0],setType=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),skill1=_useState8[0],setSkill1=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),skill2=_useState10[0],setSkill2=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),skill3=_useState12[0],setSkill3=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),errors=_useState14[0],setErrors=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),uniqe=_useState16[0],setUniqe=_useState16[1];useEffect(function(){axios.get('http://localhost:8000/api/allpets').then(function(res){return setUniqe(res.data.pets);}).catch(function(err){return console.log(\"Error: \",err);});},[]);var namePets=uniqe.map(function(p){return p.name;});console.log(namePets);var onSubmitHandler=function onSubmitHandler(e){e.preventDefault();if(namePets.includes(name)==false){axios.post('http://localhost:8000/api/pets',{name:name,type:type,description:description,skill1:skill1,skill2:skill2,skill3:skill3}).then(function(res){console.log('Response: ',res);navigate('/');}).catch(function(err){var errorResponse=err.response.data.errors;var errorArr=[];for(var _i=0,_Object$keys=Object.keys(errorResponse);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];errorArr.push(errorResponse[key].message);}setErrors(errorArr);});}else{errors.push(\"Name is already taken\");navigate('/pets/new');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pet Shelter\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Back to home\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Know A pet needing a home?\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmitHandler,children:[errors.map(function(err,index){return/*#__PURE__*/_jsx(\"p\",{children:err},index);}),/*#__PURE__*/_jsx(\"label\",{children:\"Pet Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Pet Type:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setType(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setDescription(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Skills (Optional)\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Skill 1:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setSkill1(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Skill 2:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setSkill2(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{children:\"Skill 3:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setSkill3(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Pet\"})]})]});};export default CreatePet;","map":{"version":3,"sources":["C:/Users/markl/Desktop/Dojo_Assignments/exams/mern/client/src/components/createpet.js"],"names":["React","useState","useEffect","axios","Link","navigate","CreatePet","props","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","uniqe","setUniqe","get","then","res","data","pets","catch","err","console","log","namePets","map","p","onSubmitHandler","e","preventDefault","includes","post","errorResponse","response","errorArr","Object","keys","key","push","message","index","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Link, navigate} from '@reach/router'\r\n\r\nconst CreatePet = props =>{\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [skill1, setSkill1] = useState('');\r\n    const [skill2, setSkill2] = useState('');\r\n    const [skill3, setSkill3] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [uniqe, setUniqe] = useState([]);\r\n    \r\n    useEffect(() =>{\r\n        axios.get('http://localhost:8000/api/allpets')\r\n            .then(res => setUniqe(res.data.pets))\r\n            .catch(err => console.log(\"Error: \", err))\r\n    }, [])\r\n    \r\n    const namePets = uniqe.map(p => p.name)\r\n    console.log(namePets)\r\n    const onSubmitHandler = e =>{\r\n        e.preventDefault();\r\n        if(namePets.includes(name) == false){    \r\n            axios.post('http://localhost:8000/api/pets',{\r\n                name,\r\n                type,\r\n                description,\r\n                skill1,\r\n                skill2,\r\n                skill3\r\n            })\r\n            .then(res =>{\r\n                console.log('Response: ', res);\r\n                navigate('/')\r\n            })\r\n            .catch(err =>{\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)){\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n        }\r\n        else{    \r\n            errors.push(\"Name is already taken\")\r\n            navigate('/pets/new')\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <Link to='/'>Back to home</Link>\r\n            <h3>Know A pet needing a home?</h3>\r\n            <form onSubmit={onSubmitHandler}>\r\n                {errors.map((err,index) => <p key={index}>{err}</p>)}\r\n                <label>Pet Name:</label>\r\n                <input type='text' onChange={e => setName(e.target.value)}/>\r\n                <label>Pet Type:</label>\r\n                <input type='text' onChange={e => setType(e.target.value)}/>\r\n                <label>Description:</label>\r\n                <input type='text' onChange={e => setDescription(e.target.value)}/>\r\n                <label>Skills (Optional)</label>\r\n                <label>Skill 1:</label>\r\n                <input type='text' onChange={e => setSkill1(e.target.value)}/>\r\n                <label>Skill 2:</label>\r\n                <input type='text' onChange={e => setSkill2(e.target.value)}/>\r\n                <label>Skill 3:</label>\r\n                <input type='text' onChange={e => setSkill3(e.target.value)}/>\r\n                <button type='submit'>Add Pet</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default CreatePet"]},"metadata":{},"sourceType":"module"}